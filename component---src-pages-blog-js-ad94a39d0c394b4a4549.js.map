{"version":3,"sources":["webpack://gatsby-starter-julia/./node_modules/@emotion/core/dist/emotion-core.cjs.js","webpack://gatsby-starter-julia/./node_modules/@emotion/core/dist/emotion-core.cjs.prod.js","webpack://gatsby-starter-julia/./src/pages/blog.js","webpack://gatsby-starter-julia/./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteralLoose.js"],"names":["module","exports","Error","Content","ArticleDate","MarkerHeader","ReadingTime","data","title","allMarkdownRemark","edges","filter","rawDate","node","frontmatter","Date","map","strings","raw","key","id","Link","to","path","css","slice","date","fields","readingTime","text","excerpt"],"mappings":"+HAGEA,EAAOC,QAAU,EAAjB,O,6BCDF,MAAM,IAAIC,MAAM,yI,4RCOT,IAAMC,GAAO,qHAMPC,GAAW,yFAKXC,GAAY,8PAWZC,GAAW,yFAwCxB,EAnCa,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACd,OACE,QAAC,IAAD,MACE,QAAC,IAAD,CAAKC,MAAM,UACX,QAACL,EAAD,MACE,0BACCI,EAAKE,kBAAkBC,MACrBC,QAAO,YAAe,IACfC,EADc,EAAXC,KACYC,YAAYF,QAEjC,OADa,IAAIG,KAAKH,GACR,IAAIG,QAEnBC,KAAI,gBChDqCC,EAASC,EDgD3CL,EAAH,EAAGA,KAAH,OACH,eAAKM,IAAKN,EAAKO,KACb,QAAC,EAAAC,KAAD,CACEC,GAAIT,EAAKC,YAAYS,KACrBC,KAAKA,SAAF,ICpDiCP,EDoDjC,oGCnDZC,IACHA,EAAMD,EAAQQ,MAAM,IAGtBR,EAAQC,IAAMA,ED+CG,EC9CVD,MDmDO,QAACZ,EAAD,KAAeQ,EAAKC,YAAYN,SAElC,oBACE,QAACJ,EAAD,KAAcS,EAAKC,YAAYY,OAC/B,QAACpB,EAAD,WAAiBO,EAAKc,OAAOC,YAAYC,QAE3C,iBAAIhB,EAAKiB","file":"component---src-pages-blog-js-ad94a39d0c394b4a4549.js","sourcesContent":["'use strict';\n\nif (process.env.NODE_ENV === \"production\") {\n  module.exports = require(\"./emotion-core.cjs.prod.js\");\n} else {\n  module.exports = require(\"./emotion-core.cjs.dev.js\");\n}","\"use strict\";\n\nthrow new Error(\"The `@emotion/core` package has been renamed to `@emotion/react`. Please import it like this `import { jsx } from '@emotion/react'`.\");","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport { css } from \"@emotion/core\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nimport styled from \"@emotion/styled\"\n\nexport const Content = styled.div`\n  margin: 0 auto;\n  max-width: 860px;\n  padding: 1.45rem 1.0875rem;\n`\n\nexport const ArticleDate = styled.h5`\n  display: inline;\n  color: #606060;\n`\n\nexport const MarkerHeader = styled.h3`\n  display: inline;\n  border-radius: 1em 0 1em 0;\n  background-image: linear-gradient(\n    -100deg,\n    rgba(255, 250, 150, 0.15),\n    rgba(255, 250, 150, 0.8) 100%,\n    rgba(255, 250, 150, 0.25)\n  );\n`\n\nexport const ReadingTime = styled.h5`\n  display: inline;\n  color: #606060;\n`\n\nconst Blog = ({ data }) => {\n  return (\n    <Layout>\n      <SEO title=\"Blog\" />\n      <Content>\n        <h1>Blog</h1>\n        {data.allMarkdownRemark.edges\n          .filter(({ node }) => {\n            const rawDate = node.frontmatter.rawDate\n            const date = new Date(rawDate)\n            return date < new Date()\n          })\n          .map(({ node }) => (\n            <div key={node.id}>\n              <Link\n                to={node.frontmatter.path}\n                css={css`\n                  text-decoration: none;\n                  color: inherit;\n                `}\n              >\n                <MarkerHeader>{node.frontmatter.title}</MarkerHeader>\n              </Link>\n              <div>\n                <ArticleDate>{node.frontmatter.date}</ArticleDate>\n                <ReadingTime> - {node.fields.readingTime.text}</ReadingTime>\n              </div>\n              <p>{node.excerpt}</p>\n            </div>\n          ))}\n      </Content>\n    </Layout>\n  )\n}\n\nexport default Blog\n\nexport const query = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { draft: { eq: false } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM, YYYY\")\n            rawDate: date\n            path\n          }\n          fields {\n            slug\n            readingTime {\n              text\n            }\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`\n","export default function _taggedTemplateLiteralLoose(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  strings.raw = raw;\n  return strings;\n}"],"sourceRoot":""}